-- SCRIPT AVANC√â POUR BLOX FRUITS - FREEZE & AUTO ACCEPT FORC√â
-- POUR DELTA EXECUTOR - ENVIRONNEMENT DE TEST PRIV√â UNIQUEMENT

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Variables d'√©tat
local freezeEnabled = false
local autoAcceptEnabled = false
local forceAcceptEnabled = false
local tradeActive = false
local otherPlayer = nil
local tradeUI = nil

-- Cr√©ation de l'interface
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AdvancedTradeControl"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 400, 0, 300)
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui
MainFrame.Active = true
MainFrame.Draggable = true

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 12)
Corner.Parent = MainFrame

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 40)
Title.BackgroundTransparency = 1
Title.Text = "üîí BLOX FRUITS TRADE CONTROL"
Title.TextColor3 = Color3.fromRGB(255, 215, 0)
Title.TextScaled = true
Title.Font = Enum.Font.GothamBold
Title.Parent = MainFrame

-- Bouton Freeze
local FreezeBtn = Instance.new("TextButton")
FreezeBtn.Size = UDim2.new(0, 180, 0, 50)
FreezeBtn.Position = UDim2.new(0, 20, 0, 60)
FreezeBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
FreezeBtn.Text = "FREEZE TRADE: OFF"
FreezeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
FreezeBtn.Font = Enum.Font.Gotham
FreezeBtn.TextScaled = true
FreezeBtn.Parent = MainFrame

local FreezeCorner = Instance.new("UICorner")
FreezeCorner.CornerRadius = UDim.new(0, 8)
FreezeCorner.Parent = FreezeBtn

-- Bouton Auto Accept
local AcceptBtn = Instance.new("TextButton")
AcceptBtn.Size = UDim2.new(0, 180, 0, 50)
AcceptBtn.Position = UDim2.new(0, 200, 0, 60)
AcceptBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
AcceptBtn.Text = "AUTO ACCEPT: OFF"
AcceptBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
AcceptBtn.Font = Enum.Font.Gotham
AcceptBtn.TextScaled = true
AcceptBtn.Parent = MainFrame

local AcceptCorner = Instance.new("UICorner")
AcceptCorner.CornerRadius = UDim.new(0, 8)
AcceptCorner.Parent = AcceptBtn

-- Bouton Force Accept
local ForceBtn = Instance.new("TextButton")
ForceBtn.Size = UDim2.new(0, 360, 0, 50)
ForceBtn.Position = UDim2.new(0, 20, 0, 120)
ForceBtn.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
ForceBtn.Text = "FORCE ACCEPT: OFF"
ForceBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
ForceBtn.Font = Enum.Font.Gotham
ForceBtn.TextScaled = true
ForceBtn.Parent = MainFrame

local ForceCorner = Instance.new("UICorner")
ForceCorner.CornerRadius = UDim.new(0, 8)
ForceCorner.Parent = ForceBtn

-- Status
local Status = Instance.new("TextLabel")
Status.Size = UDim2.new(1, 0, 0, 40)
Status.Position = UDim2.new(0, 0, 0, 180)
Status.BackgroundTransparency = 1
Status.Text = "STATUS: EN ATTENTE DE TRADE"
Status.TextColor3 = Color3.fromRGB(100, 255, 100)
Status.TextScaled = true
Status.Font = Enum.Font.Gotham
Status.Parent = MainFrame

-- Player Info
local PlayerInfo = Instance.new("TextLabel")
PlayerInfo.Size = UDim2.new(1, 0, 0, 30)
PlayerInfo.Position = UDim2.new(0, 0, 0, 230)
PlayerInfo.BackgroundTransparency = 1
PlayerInfo.Text = "JOUEUR: AUCUN"
PlayerInfo.TextColor3 = Color3.fromRGB(200, 200, 255)
PlayerInfo.TextScaled = true
PlayerInfo.Font = Enum.Font.Gotham
PlayerInfo.Parent = MainFrame

-- Instructions
local Instructions = Instance.new("TextLabel")
Instructions.Size = UDim2.new(1, 0, 0, 30)
Instructions.Position = UDim2.new(0, 0, 0, 270)
Instructions.BackgroundTransparency = 1
Instructions.Text = "RIGHT CONTROL = AFFICHER/MASQUER"
Instructions.TextColor3 = Color3.fromRGB(150, 150, 150)
Instructions.TextScaled = true
Instructions.Font = Enum.Font.Gotham
Instructions.TextTransparency = 0.5
Instructions.Parent = MainFrame

-- Fonctions utilitaires
local function updateButtons()
    FreezeBtn.BackgroundColor3 = freezeEnabled and Color3.fromRGB(50, 150, 50) or Color3.fromRGB(60, 60, 80)
    FreezeBtn.Text = "FREEZE TRADE: " .. (freezeEnabled and "ON" or "OFF")
    
    AcceptBtn.BackgroundColor3 = autoAcceptEnabled and Color3.fromRGB(50, 150, 50) or Color3.fromRGB(60, 60, 80)
    AcceptBtn.Text = "AUTO ACCEPT: " .. (autoAcceptEnabled and "ON" or "OFF")
    
    ForceBtn.BackgroundColor3 = forceAcceptEnabled and Color3.fromRGB(200, 50, 50) or Color3.fromRGB(150, 50, 50)
    ForceBtn.Text = "FORCE ACCEPT: " .. (forceAcceptEnabled and "ON" or "OFF")
end

local function findTradeUI()
    for _, gui in pairs(PlayerGui:GetChildren()) do
        if gui.Name:find("Trade") or gui.Name:find("trade") then
            return gui
        end
    end
    return nil
end

local function freezeTrade()
    if not freezeEnabled or not tradeUI then return end
    
    -- 1. Geler le timer
    for _, obj in pairs(tradeUI:GetDescendants()) do
        if obj:IsA("TextLabel") and (obj.Text:find("Timer") or obj.Text:find("Time") or obj.Name:find("Timer")) then
            obj.Text = "‚è∏Ô∏è FROZEN"
            obj.TextColor3 = Color3.fromRGB(0, 255, 255)
            
            -- Emp√™cher toute mise √† jour du timer
            obj:GetPropertyChangedSignal("Text"):Connect(function()
                if freezeEnabled then
                    obj.Text = "‚è∏Ô∏è FROZEN"
                end
            end)
        end
    end
    
    -- 2. D√©sactiver tous les boutons de modification
    for _, btn in pairs(tradeUI:GetDescendants()) do
        if btn:IsA("TextButton") or btn:IsA("ImageButton") then
            if btn.Text:lower():find("add") or 
               btn.Text:lower():find("remove") or
               btn.Text:lower():find("enlever") or
               btn.Text:lower():find("ajouter") or
               btn.Name:lower():find("add") or
               btn.Name:lower():find("remove") then
                btn.Active = false
                btn.AutoButtonColor = false
                btn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
                btn.TextColor3 = Color3.fromRGB(150, 150, 150)
                
                -- Emp√™cher toute interaction
                btn.MouseButton1Click:Connect(function()
                    if freezeEnabled then
                        return false
                    end
                end)
            end
        end
    end
    
    -- 3. Emp√™cher de fermer le trade
    tradeUI:GetPropertyChangedSignal("Parent"):Connect(function()
        if freezeEnabled and tradeUI.Parent == nil then
            tradeUI.Parent = PlayerGui
        end
    end)
    
    -- 4. D√©sactiver les scripts du trade
    for _, script in pairs(tradeUI:GetDescendants()) do
        if script:IsA("LocalScript") then
            script.Disabled = true
        end
    end
    
    Status.Text = "STATUS: TRADE GEL√â!"
end

local function autoAcceptTrade()
    if not autoAcceptEnabled or not tradeUI then return end
    
    -- Trouver le bouton d'acceptation
    for _, btn in pairs(tradeUI:GetDescendants()) do
        if btn:IsA("TextButton") and (
            btn.Text:lower():find("accept") or 
            btn.Text:lower():find("confirmer") or 
            btn.Name:lower():find("accept")
        ) then
            spawn(function()
                wait(1.5) -- D√©lai avant acceptation
                if autoAcceptEnabled and btn.Parent then
                    -- Simuler un clic
                    btn.MouseButton1Click:Fire()
                    
                    -- M√©thode alternative si Fire ne fonctionne pas
                    local absolutePos = btn.AbsolutePosition
                    local absoluteSize = btn.AbsoluteSize
                    VirtualInputManager:SendMouseButtonEvent(
                        absolutePos.X + absoluteSize.X/2,
                        absolutePos.Y + absoluteSize.Y/2,
                        0, true, game
                    )
                    wait(0.1)
                    VirtualInputManager:SendMouseButtonEvent(
                        absolutePos.X + absoluteSize.X/2,
                        absolutePos.Y + absoluteSize.Y/2,
                        0, false, game
                    )
                    
                    Status.Text = "STATUS: TRADE ACCEPT√â!"
                end
            end)
            break
        end
    end
end

local function forceOtherPlayerAccept()
    if not forceAcceptEnabled or not otherPlayer or not tradeUI then return end
    
    -- M√©thode 1: Forcer via RemoteEvent (si disponible)
    local tradeRemote = ReplicatedStorage:FindFirstChild("TradeRemote") or 
                       ReplicatedStorage:FindFirstChild("TradeEvent")
    
    if tradeRemote then
        tradeRemote:FireServer("ForceAccept", otherPlayer)
    end
    
    -- M√©thode 2: Simuler un clic sur le bouton de l'autre joueur (plus complexe)
    -- Cette m√©thode n√©cessite d'acc√©der √† l'interface de l'autre joueur, ce qui est difficile
    
    -- M√©thode 3: Forcer l'√©tat du trade c√¥t√© serveur (si vous avez acc√®s)
    -- Cette partie d√©pend de votre impl√©mentation serveur
    
    Status.Text = "STATUS: FORCAGE DE L'AUTRE JOUEUR..."
    
    -- Notification visuelle
    local notification = Instance.new("TextLabel")
    notification.Size = UDim2.new(0, 300, 0, 50)
    notification.Position = UDim2.new(0.5, -150, 0.3, 0)
    notification.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    notification.Text = "üîí FOR√áAGE DU TRADE EN COURS..."
    notification.TextColor3 = Color3.fromRGB(255, 255, 255)
    notification.TextScaled = true
    notification.Font = Enum.Font.GothamBold
    notification.Parent = ScreenGui
    
    local notifCorner = Instance.new("UICorner")
    notifCorner.CornerRadius = UDim.new(0, 10)
    notifCorner.Parent = notification
    
    spawn(function()
        wait(2)
        TweenService:Create(notification, TweenInfo.new(1), {
            TextTransparency = 1,
            BackgroundTransparency = 1
        }):Play()
        wait(1)
        notification:Destroy()
    end)
end

-- Surveillance des trades
spawn(function()
    while true do
        wait(0.5)
        tradeUI = findTradeUI()
        
        if tradeUI and not tradeActive then
            tradeActive = true
            
            -- Identifier l'autre joueur
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local distance = (LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                    if distance < 20 then -- Distance raisonnable pour un trade
                        otherPlayer = player
                        PlayerInfo.Text = "JOUEUR: " .. player.Name
                        break
                    end
                end
            end
            
            Status.Text = "STATUS: TRADE D√âTECT√â!"
            
            -- Appliquer les fonctionnalit√©s
            freezeTrade()
            autoAcceptTrade()
            forceOtherPlayerAccept()
            
            -- Surveillance de la fin du trade
            local connection
            connection = tradeUI.AncestryChanged:Connect(function()
                if not tradeUI.Parent then
                    tradeActive = false
                    otherPlayer = nil
                    PlayerInfo.Text = "JOUEUR: AUCUN"
                    connection:Disconnect()
                    Status.Text = "STATUS: TRADE TERMIN√â"
                end
            end)
        elseif not tradeUI and tradeActive then
            tradeActive = false
            otherPlayer = nil
            PlayerInfo.Text = "JOUEUR: AUCUN"
            Status.Text = "STATUS: TRADE TERMIN√â"
        end
    end
end)

-- √âv√©nements des boutons
FreezeBtn.MouseButton1Click:Connect(function()
    freezeEnabled = not freezeEnabled
    updateButtons()
    Status.Text = "STATUS: FREEZE " .. (freezeEnabled and "ACTIV√â" else "D√âSACTIV√â")
    
    if freezeEnabled and tradeActive then
        freezeTrade()
    end
end)

AcceptBtn.MouseButton1Click:Connect(function()
    autoAcceptEnabled = not autoAcceptEnabled
    updateButtons()
    Status.Text = "STATUS: AUTO ACCEPT " .. (autoAcceptEnabled and "ACTIV√â" else "D√âSACTIV√â")
    
    if autoAcceptEnabled and tradeActive then
        autoAcceptTrade()
    end
end)

ForceBtn.MouseButton1Click:Connect(function()
    forceAcceptEnabled = not forceAcceptEnabled
    updateButtons()
    Status.Text = "STATUS: FORCE ACCEPT " .. (forceAcceptEnabled and "ACTIV√â" else "D√âSACTIV√â")
    
    if forceAcceptEnabled and tradeActive and otherPlayer then
        forceOtherPlayerAccept()
    end
end)

-- Raccourci clavier
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.RightControl then
        ScreenGui.Enabled = not ScreenGui.Enabled
    end
end)

-- Initialisation
updateButtons()
Status.Text = "STATUS: PR√äT - RIGHT CONTROL POUR AFFICHER"

-- Notification de d√©marrage
local Notify = Instance.new("TextLabel")
Notify.Size = UDim2.new(0, 350, 0, 60)
Notify.Position = UDim2.new(0.5, -175, 0.1, 0)
Notify.BackgroundColor3 = Color3.fromRGB(30, 30, 50)
Notify.Text = "üîí BLOX FRUITS TRADE CONTROL\nACTIV√â AVEC SUCC√àS!"
Notify.TextColor3 = Color3.fromRGB(255, 215, 0)
Notify.TextScaled = true
Notify.Font = Enum.Font.GothamBold
Notify.Parent = ScreenGui

local NotifyCorner = Instance.new("UICorner")
NotifyCorner.CornerRadius = UDim.new(0, 15)
NotifyCorner.Parent = Notify

spawn(function()
    wait(3)
    TweenService:Create(Notify, TweenInfo.new(1), {
        TextTransparency = 1,
        BackgroundTransparency = 1
    }):Play()
    wait(1)
    Notify:Destroy()
end)

print("üöÄ Script Blox Fruits Trade Control avanc√© charg√©!")
